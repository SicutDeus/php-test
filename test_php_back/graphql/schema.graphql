
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

#scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

scalar Date

type Query {
    user(
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    users(
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    ticket(
    id: ID @eq
    ): Ticket @find

    tickets: [Ticket!] @paginate(defaultCount: 10)

    event(
        id: ID @eq
    ): Event @find

    events: [Event!] @paginate(defaultCount: 10)

}

type User {
    id: ID!

    name: String!

    email: String!

    email_verified_at: DateTime

    tickets: [Ticket!] @hasManyThrough

    created_at: DateTime!

    updated_at: DateTime!
}

type Mutation {
  createUser(
    name: String!
    email: String
    password: String
    ): User! @create
    deleteUser(id: ID! @whereKey): User @delete
}

type Event {
    id: ID!
    name: String
    date: Date
}

type Ticket {
    id: ID!
    name: String!
    event: Event!
    user: User!
}